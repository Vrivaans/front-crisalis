{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/cliente-services.service\";\nimport * as i2 from \"src/app/services/token.service\";\nimport * as i3 from \"@angular/common\";\nfunction ClienteComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"h4\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"h4\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"h4\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"h4\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const Cliente_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(Cliente_r1.nombre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(Cliente_r1.apellido);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(Cliente_r1.dniCliente);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(Cliente_r1.empresa);\n  }\n}\nexport class ClienteComponent {\n  constructor(clienteServices, tokenService) {\n    this.clienteServices = clienteServices;\n    this.tokenService = tokenService;\n    this.cliente = [];\n    this.esta_logeado = false;\n  }\n  ngOnInit() {\n    this.cargarClientes();\n    if (this.tokenService.getToken()) {\n      this.esta_logeado = true;\n    } else {\n      this.esta_logeado = false;\n    }\n  }\n  cargarClientes() {\n    this.clienteServices.listaClientes().subscribe(data => {\n      this.cliente = data;\n    });\n  }\n}\nClienteComponent.ɵfac = function ClienteComponent_Factory(t) {\n  return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.ClienteServicesService), i0.ɵɵdirectiveInject(i2.TokenService));\n};\nClienteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClienteComponent,\n  selectors: [[\"app-cliente\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"table\", \"mt-7\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ClienteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Lista de clientes\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\")(4, \"table\", 1)(5, \"tbody\")(6, \"td\")(7, \"h2\");\n      i0.ɵɵtext(8, \"Nombre\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"td\")(10, \"h2\");\n      i0.ɵɵtext(11, \"Apellido\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"td\")(13, \"h2\");\n      i0.ɵɵtext(14, \"Dni\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"td\")(16, \"h2\");\n      i0.ɵɵtext(17, \"Empresa\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, ClienteComponent_tr_18_Template, 13, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cliente);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAkBMA,0BAAoC;IAE5BA,YAAkB;IAAAA,iBAAK;IAE7BA,0BAAI;IACEA,YAAoB;IAAAA,iBAAK;IAE/BA,0BAAI;IACEA,YAAsB;IAAAA,iBAAK;IAEjCA,2BAAI;IACEA,aAAmB;IAAAA,iBAAK;;;;IATxBA,eAAkB;IAAlBA,uCAAkB;IAGlBA,eAAoB;IAApBA,yCAAoB;IAGpBA,eAAsB;IAAtBA,2CAAsB;IAGtBA,eAAmB;IAAnBA,wCAAmB;;;ACnBjC,OAAM,MAAOC,gBAAgB;EAG7BC,YAAoBC,eAAuC,EAAUC,YAA0B;IAA3E,oBAAe,GAAfD,eAAe;IAAkC,iBAAY,GAAZC,YAAY;IAFjF,YAAO,GAAc,EAAE;IAIvB,iBAAY,GAAG,KAAK;EAF6E;EAIjGC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,IAAI,CAACF,YAAY,CAACG,QAAQ,EAAE,EAAE;MAChC,IAAI,CAACC,YAAY,GAAG,IAAI;KACzB,MAAK;MACJ,IAAI,CAACA,YAAY,GAAG,KAAK;;EAG7B;EAEAF,cAAc;IACZ,IAAI,CAACH,eAAe,CAACM,aAAa,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAAE,IAAI,CAACC,OAAO,GAAGD,IAAI;IAAC,CAAC,CAAC;EAChF;;AAnBaV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV7BjB,8BAAiB;MACXA,iCAAiB;MAAAA,iBAAK;MAE5BA,2BAAK;MAISA,sBAAM;MAAAA,iBAAK;MAEjBA,0BAAI;MACEA,yBAAQ;MAAAA,iBAAK;MAEnBA,2BAAI;MACEA,oBAAG;MAAAA,iBAAK;MAEdA,2BAAI;MACEA,wBAAO;MAAAA,iBAAK;MAEpBA,kEAaK;MACPA,iBAAQ;;;MAdkBA,gBAAU;MAAVA,qCAAU","names":["i0","ClienteComponent","constructor","clienteServices","tokenService","ngOnInit","cargarClientes","getToken","esta_logeado","listaClientes","subscribe","data","cliente","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/vrivaans/Desktop/programacion/crisalis/frontend-crisalis/front-crisalis/src/app/pages/cliente/cliente.component.html","/home/vrivaans/Desktop/programacion/crisalis/frontend-crisalis/front-crisalis/src/app/pages/cliente/cliente.component.ts"],"sourcesContent":["<div class=\"row\">\n  <h1>Lista de clientes</h1>\n</div>\n<div>\n  <table class=\"table mt-7\">\n    <tbody>\n        <td>\n          <h2>Nombre</h2>\n        </td>\n        <td>\n          <h2>Apellido</h2>\n        </td>\n        <td>\n          <h2>Dni</h2>\n        </td>\n        <td>\n          <h2>Empresa</h2>\n        </td>\n      <tr *ngFor=\"let Cliente of cliente\">\n        <td>\n          <h4>{{Cliente.nombre}}</h4>\n        </td>\n        <td>\n          <h4>{{Cliente.apellido}}</h4>\n        </td>\n        <td>\n          <h4>{{Cliente.dniCliente}}</h4>\n        </td>\n        <td>\n          <h4>{{Cliente.empresa}}</h4>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { TokenService } from 'src/app/services/token.service';\nimport { ClienteServicesService } from './../../services/cliente-services.service';\nimport { Component } from '@angular/core';\nimport { Cliente } from 'src/app/Models/cliente';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.scss']\n})\nexport class ClienteComponent {\ncliente: Cliente[] = [];\n\nconstructor(private clienteServices: ClienteServicesService, private tokenService: TokenService){}\n\nesta_logeado = false;\n\nngOnInit(): void {\n  this.cargarClientes();\n  if (this.tokenService.getToken()) {\n    this.esta_logeado = true;\n  } else{\n    this.esta_logeado = false;\n  }\n\n}\n\ncargarClientes():void{\n  this.clienteServices.listaClientes().subscribe(data => {this.cliente = data;})\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}