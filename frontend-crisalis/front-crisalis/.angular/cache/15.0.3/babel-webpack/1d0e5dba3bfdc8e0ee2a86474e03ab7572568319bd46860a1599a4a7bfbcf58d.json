{"ast":null,"code":"import { LoginUsuario } from 'src/app/Models/login-usuario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/token.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n//import { AuthService } from 'src/app/Services/auth.service';\n//import { TokenService } from 'src/app/Services/token.service';\nexport class LoginComponent {\n  constructor(tokenService, authService, router) {\n    this.tokenService = tokenService;\n    this.authService = authService;\n    this.router = router;\n    this.isLogged = false;\n    this.isLoginFail = false;\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n      this.isLoginFail = false;\n      this.roles = this.tokenService.getAuthorities();\n    }\n  }\n  onLogin() {\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n    this.authService.login(this.loginUsuario).subscribe(data => {\n      this.isLogged = true;\n      this.isLogged = false;\n      this.tokenService.setToken(data.token);\n      this.tokenService.setUsername(data.nombreUsuario);\n      this.tokenService.setAuthorities(data.authorities);\n      this.roles = data.authorities;\n      //this.router.navigate([''])\n      setTimeout(() => {\n        this.router.navigate(['']);\n        window.location.href = \"/\";\n      }, 4000);\n      window.location.reload();\n    }, err => {\n      this.isLogged = false;\n      this.isLoginFail = true;\n      this.errMsj = err.error.mensaje;\n      console.log(this.errMsj);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 28,\n  vars: 2,\n  consts: [[1, \"vh-100\", \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\"], [1, \"card\", \"bg-dark\", \"text-white\", 2, \"border-radius\", \"1rem\"], [1, \"card-body\", \"p-5\", \"text-center\"], [1, \"mb-md-5\", \"mt-md-4\", \"pb-5\"], [1, \"fw-bold\", \"mb-2\", \"text-uppercase\"], [1, \"text-white-50\", \"mb-5\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-outline\", \"form-white\", \"mb-4\"], [\"type\", \"user\", \"id\", \"nombreUsuario\", \"name\", \"nombreUsuario\", \"name\", \"nombreUsuario\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nombreUsuario\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-light\", \"btn-lg\", \"px-5\"], [1, \"mb-0\"], [\"routerLink\", \"/registro\", \"routerLinkActive\", \"active-link\", 1, \"text-white-50\", \"fw-bold\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\", 7);\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\", 8);\n      i0.ɵɵtext(10, \" Por favor ingrese usuario y contrase\\u00F1a \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 9, 10);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(13, \"div\", 11)(14, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.nombreUsuario = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"label\", 13);\n      i0.ɵɵtext(16, \"Usuario\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\", 15);\n      i0.ɵɵtext(20, \"Contrase\\u00F1a\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 16);\n      i0.ɵɵtext(22, \" Ingresar \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\")(24, \"p\", 17);\n      i0.ɵɵtext(25, \" \\u00BFEs necesario crear una cuenta? \");\n      i0.ɵɵelementStart(26, \"a\", 18);\n      i0.ɵɵtext(27, \"Reg\\u00EDstrese\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.nombreUsuario);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.RouterLink, i3.RouterLinkActive, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\".gradient-custom[_ngcontent-%COMP%] {\\n  \\n  background: #6a11cb;\\n  \\n  \\n  background: linear-gradient(to right, rgb(106, 17, 203), rgb(37, 117, 252));\\n}\\n/*# sourceURL=webpack://./src/app/pages/login/login/login.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtFQUNBLG1CQUFBO0VBRUEsK0JBQUE7RUFHQSxxRUFBQTtFQUNBLDJFQUFBO0FBREoiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JhZGllbnQtY3VzdG9tIHtcbiAgLyogZmFsbGJhY2sgZm9yIG9sZCBicm93c2VycyAqL1xuICBiYWNrZ3JvdW5kOiAjNmExMWNiO1xuICAvKiBDaHJvbWUgMTAtMjUsIFNhZmFyaSA1LjEtNiAqL1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiKDEwNiwgMTcsIDIwMyksIHJnYigzNywgMTE3LCAyNTIpKTtcbiAgLyogVzNDLCBJRSAxMCsvIEVkZ2UsIEZpcmVmb3ggMTYrLCBDaHJvbWUgMjYrLCBPcGVyYSAxMissIFNhZmFyaSA3KyAqL1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYigxMDYsIDE3LCAyMDMpLCByZ2IoMzcsIDExNywgMjUyKSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,YAAY,QAAQ,8BAA8B;;;;;;AAG3D;AACA;AAOA,OAAM,MAAOC,cAAc;EAYzBC,YAAoBC,YAA0B,EAAUC,WAAwB,EAAUC,MAAc;IAApF,iBAAY,GAAZF,YAAY;IAAwB,gBAAW,GAAXC,WAAW;IAAuB,WAAM,GAANC,MAAM;IAVhG,aAAQ,GAAY,KAAK;IACzB,gBAAW,GAAY,KAAK;IAI5B,UAAK,GAAa,EAAE;EAOnB;EAEDC,QAAQ;IACN,IAAI,IAAI,CAACH,YAAY,CAACI,QAAQ,EAAE,EAAC;MAC/B,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,WAAW,GAAG,KAAK;MACxB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACP,YAAY,CAACQ,cAAc,EAAE;;EAEnD;EAEAC,OAAO;IACL,IAAI,CAACC,YAAY,GAAG,IAAIb,YAAY,CAAC,IAAI,CAACc,aAAa,EAAC,IAAI,CAACC,QAAQ,CAAC;IACrE,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC,CAACI,SAAS,CAClDC,IAAI,IAAG;MAAE,IAAI,CAACV,QAAQ,GAAG,IAAI;MAC3B,IAAI,CAACA,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACL,YAAY,CAACgB,QAAQ,CAACD,IAAI,CAACE,KAAK,CAAC;MACtC,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAACH,IAAI,CAACJ,aAAa,CAAC;MACjD,IAAI,CAACX,YAAY,CAACmB,cAAc,CAACJ,IAAI,CAACK,WAAW,CAAC;MAClD,IAAI,CAACb,KAAK,GAAIQ,IAAI,CAACK,WAAW;MAC9B;MAEAC,UAAU,CAAC,MAAK;QACd,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG;MAC1B,CAAC,EAAE,IAAI,CAAC;MACRF,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE;IAC1B,CAAC,EAAEC,GAAG,IAAG;MAAE,IAAI,CAACtB,QAAQ,GAAG,KAAK;MACpB,IAAI,CAACC,WAAW,GAAG,IAAI;MACzB,IAAI,CAACsB,MAAM,GAAGD,GAAG,CAACE,KAAK,CAACC,OAAO;MACjCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC;IAAC,CAAC,CACnC;EACH;;AA7CW9B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BC,kCAAwC;MAOgBA,qBAAK;MAAAA,iBAAK;MAClDA,4BAA8B;MAC5BA,8DACF;MAAAA,iBAAI;MAEJA,oCAAoD;MAAlCA;QAAA,OAAYC,aAAS;MAAA,EAAC;MACtCD,gCAA0C;MAMtCA;QAAA;MAAA,EAA2B;MAL7BA,iBAQE;MACFA,kCAA8C;MAAAA,wBAAO;MAAAA,iBAAQ;MAG/DA,gCAA0C;MAKtCA;QAAA;MAAA,EAAsB;MAJxBA,iBAOE;MAEFA,kCAAyC;MAAAA,gCAAU;MAAAA,iBAAQ;MAE7DA,mCAAgE;MAC9DA,2BACF;MAAAA,iBAAS;MAIbA,4BAAK;MAEDA,uDACA;MAAAA,8BAC6D;MAAAA,gCAAU;MAAAA,iBAAI;;;MA7BvEA,gBAA2B;MAA3BA,2CAA2B;MAY3BA,eAAsB;MAAtBA,sCAAsB","names":["LoginUsuario","LoginComponent","constructor","tokenService","authService","router","ngOnInit","getToken","isLogged","isLoginFail","roles","getAuthorities","onLogin","loginUsuario","nombreUsuario","password","login","subscribe","data","setToken","token","setUsername","setAuthorities","authorities","setTimeout","navigate","window","location","href","reload","err","errMsj","error","mensaje","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/vrivaans/Desktop/programacion/crisalis/frontend-crisalis/front-crisalis/src/app/pages/login/login/login.component.ts","/home/vrivaans/Desktop/programacion/crisalis/frontend-crisalis/front-crisalis/src/app/pages/login/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginUsuario } from 'src/app/Models/login-usuario';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TokenService } from 'src/app/services/token.service';\n//import { AuthService } from 'src/app/Services/auth.service';\n//import { TokenService } from 'src/app/Services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isLogged: boolean = false;\n  isLoginFail: boolean = false;\n  loginUsuario!: LoginUsuario;\n  nombreUsuario!: string\n  password!: string;\n  roles: string[] = [] ;\n  errMsj!: string;\n\n\n\n  constructor(private tokenService: TokenService, private authService: AuthService, private router: Router) {\n\n   }\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken()){\n      this.isLogged = true;\n      this.isLoginFail = false;\n      this.roles = this.tokenService.getAuthorities();\n    }\n  }\n\n  onLogin(): void {\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario,this.password);\n     this.authService.login(this.loginUsuario).subscribe(\n      data => {this.isLogged = true;\n        this.isLogged = false;\n        this.tokenService.setToken(data.token);\n        this.tokenService.setUsername(data.nombreUsuario);\n        this.tokenService.setAuthorities(data.authorities);\n        this.roles  = data.authorities;\n        //this.router.navigate([''])\n\n        setTimeout(() =>{\n          this.router.navigate(['']);\n          window.location.href=\"/\"\n        }, 4000);\n        window.location.reload();\n      }, err => {this.isLogged = false\n                  this.isLoginFail = true;\n                this.errMsj = err.error.mensaje;\n              console.log(this.errMsj);}\n    );\n  }\n\n}\n","\n<section class=\"vh-100 gradient-custom\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n          <div class=\"card bg-dark text-white\" style=\"border-radius: 1rem\">\n            <div class=\"card-body p-5 text-center\">\n              <div class=\"mb-md-5 mt-md-4 pb-5\">\n                <h2 class=\"fw-bold mb-2 text-uppercase\">Login</h2>\n                <p class=\"text-white-50 mb-5\">\n                  Por favor ingrese usuario y contraseña\n                </p>\n\n                <form #f=\"ngForm\" (ngSubmit)=\"onLogin()\" novalidate>\n                  <div class=\"form-outline form-white mb-4\">\n                    <input\n                      type=\"user\"\n                      id=\"nombreUsuario\"\n                      name=\"nombreUsuario\"\n                      class=\"form-control form-control-lg\"\n                      [(ngModel)]=\"nombreUsuario\"\n                      name=\"nombreUsuario\"\n                      required\n                    />\n                    <label class=\"form-label\" for=\"nombreUsuario\">Usuario</label>\n                  </div>\n\n                  <div class=\"form-outline form-white mb-4\">\n                    <input\n                      type=\"password\"\n                      id=\"password\"\n                      class=\"form-control form-control-lg\"\n                      [(ngModel)]=\"password\"\n                      name=\"password\"\n                      required\n                    />\n\n                    <label class=\"form-label\" for=\"password\">Contraseña</label>\n                  </div>\n                  <button class=\"btn btn-outline-light btn-lg px-5\" type=\"submit\">\n                    Ingresar\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <p class=\"mb-0\">\n                  ¿Es necesario crear una cuenta?\n                  <a routerLink=\"/registro\"\n                  routerLinkActive=\"active-link\" class=\"text-white-50 fw-bold\">Regístrese</a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}