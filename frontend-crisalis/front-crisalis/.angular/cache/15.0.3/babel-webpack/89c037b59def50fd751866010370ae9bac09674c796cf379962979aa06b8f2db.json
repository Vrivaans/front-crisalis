{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/token.service\";\nexport class NavbarComponent {\n  constructor(router, tokenService) {\n    this.router = router;\n    this.tokenService = tokenService;\n    this.esta_logeado = false;\n  }\n  ngOnInit() {\n    if (this.tokenService.getToken()) {\n      this.esta_logeado = true;\n    } else {\n      this.esta_logeado = false;\n    }\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      const showNavbar = (toggleId, navId, bodyId, headerId) => {\n        const toggle = document.getElementById(toggleId),\n          nav = document.getElementById(navId),\n          bodypd = document.getElementById(bodyId),\n          headerpd = document.getElementById(headerId);\n        // Validate that all variables exist\n        if (toggle && nav && bodypd && headerpd) {\n          toggle.addEventListener('click', () => {\n            // show navbar\n            nav.classList.toggle('show');\n            // change icon\n            toggle.classList.toggle('bx-x');\n            // add padding to body\n            bodypd.classList.toggle('body-pd');\n            // add padding to header\n            headerpd.classList.toggle('body-pd');\n          });\n        }\n      };\n      showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header');\n      /*===== LINK ACTIVE =====*/\n      const linkColor = document.querySelectorAll('.nav_link');\n      function colorLink() {\n        if (linkColor) {\n          linkColor.forEach(l => l.classList.remove('active'));\n          this.classList.add('active');\n        }\n      }\n      linkColor.forEach(l => l.addEventListener('click', colorLink));\n      // Your code to run since DOM is loaded and ready\n    });\n  }\n\n  login() {\n    this.router.navigate(['/login']);\n  }\n  onLogout() {\n    this.tokenService.logOut();\n    window.location.reload();\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TokenService));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 0,\n  vars: 0,\n  template: function NavbarComponent_Template(rf, ctx) {},\n  styles: [\".nav-link.active.active-link[_ngcontent-%COMP%], .nav-link[_ngcontent-%COMP%]   active[_ngcontent-%COMP%], .active-link[_ngcontent-%COMP%], .navbar-light[_ngcontent-%COMP%] {\\n  color: #01b3ba;\\n  font-weight: bold;\\n}\\n\\na[_ngcontent-%COMP%]:hover {\\n  color: #01b3ba;\\n}\\n\\n#brand[_ngcontent-%COMP%], #home[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: auto;\\n}\\n/*# sourceURL=webpack://./src/app/sharepages/navbar/navbar/navbar.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVwYWdlcy9uYXZiYXIvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNFLGNBSGE7RUFJYixpQkFBQTtBQUpGOztBQU1BO0VBQ0UsY0FQYTtBQUlmOztBQUtBO0VBQ0UsWUFBQTtBQUZGOztBQUlBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7QUFERiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXYtbGluay5hY3RpdmUuYWN0aXZlLWxpbmssIC5uYXYtbGluayBhY3RpdmUsIC5hY3RpdmUtbGluaywgLm5hdmJhci1saWdodCB7XG4gIGNvbG9yOiAjMDFiM2JhO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuYTpob3ZlciB7XG4gIGNvbG9yOiAjMDFiM2JhO1xufVxuXG4jYnJhbmQsICNob21lIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5pbWcge1xuICBoZWlnaHQ6IDMwcHg7XG4gIHdpZHRoOiBhdXRvO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,MAAc,EAAUC,YAA0B;IAAlD,WAAM,GAAND,MAAM;IAAkB,iBAAY,GAAZC,YAAY;IACxD,iBAAY,GAAG,KAAK;EADsD;EAG1EC,QAAQ;IACN,IAAI,IAAI,CAACD,YAAY,CAACE,QAAQ,EAAE,EAAE;MAChC,IAAI,CAACC,YAAY,GAAG,IAAI;KACzB,MAAK;MACJ,IAAI,CAACA,YAAY,GAAG,KAAK;;IAG3BC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,UAASC,KAAK;MAE1D,MAAMC,UAAU,GAAG,CAACC,QAAY,EAAEC,KAAS,EAAEC,MAAU,EAAEC,QAAY,KAAI;QACzE,MAAMC,MAAM,GAAGR,QAAQ,CAACS,cAAc,CAACL,QAAQ,CAAC;UAChDM,GAAG,GAAGV,QAAQ,CAACS,cAAc,CAACJ,KAAK,CAAC;UACpCM,MAAM,GAAGX,QAAQ,CAACS,cAAc,CAACH,MAAM,CAAC;UACxCM,QAAQ,GAAGZ,QAAQ,CAACS,cAAc,CAACF,QAAQ,CAAC;QAE5C;QACA,IAAGC,MAAM,IAAIE,GAAG,IAAIC,MAAM,IAAIC,QAAQ,EAAC;UACvCJ,MAAM,CAACP,gBAAgB,CAAC,OAAO,EAAE,MAAI;YACrC;YACAS,GAAG,CAACG,SAAS,CAACL,MAAM,CAAC,MAAM,CAAC;YAC5B;YACAA,MAAM,CAACK,SAAS,CAACL,MAAM,CAAC,MAAM,CAAC;YAC/B;YACAG,MAAM,CAACE,SAAS,CAACL,MAAM,CAAC,SAAS,CAAC;YAClC;YACAI,QAAQ,CAACC,SAAS,CAACL,MAAM,CAAC,SAAS,CAAC;UACpC,CAAC,CAAC;;MAEF,CAAC;MAEDL,UAAU,CAAC,eAAe,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,CAAC;MAExD;MACA,MAAMW,SAAS,GAAGd,QAAQ,CAACe,gBAAgB,CAAC,WAAW,CAAC;MAExD,SAASC,SAAS;QAClB,IAAGF,SAAS,EAAC;UACbA,SAAS,CAACG,OAAO,CAACC,CAAC,IAAGA,CAAC,CAACL,SAAS,CAACM,MAAM,CAAC,QAAQ,CAAC,CAAC;UACnD,IAAI,CAACN,SAAS,CAACO,GAAG,CAAC,QAAQ,CAAC;;MAE5B;MACAN,SAAS,CAACG,OAAO,CAACC,CAAC,IAAGA,CAAC,CAACjB,gBAAgB,CAAC,OAAO,EAAEe,SAAS,CAAC,CAAC;MAE5D;IACD,CAAC,CAAC;EAEN;;EACAK,KAAK;IACH,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQ;IACN,IAAI,CAAC3B,YAAY,CAAC4B,MAAM,EAAE;IAC1BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC5B;;AA3DalC,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["NavbarComponent","constructor","router","tokenService","ngOnInit","getToken","esta_logeado","document","addEventListener","event","showNavbar","toggleId","navId","bodyId","headerId","toggle","getElementById","nav","bodypd","headerpd","classList","linkColor","querySelectorAll","colorLink","forEach","l","remove","add","login","navigate","onLogout","logOut","window","location","reload","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["/home/vrivaans/Desktop/programacion/crisalis/frontend-crisalis/front-crisalis/src/app/sharepages/navbar/navbar/navbar.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, private tokenService: TokenService) { }\n  esta_logeado = false;\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken()) {\n      this.esta_logeado = true;\n    } else{\n      this.esta_logeado = false;\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", function(event) {\n\n      const showNavbar = (toggleId:any, navId:any, bodyId:any, headerId:any) =>{\n      const toggle = document.getElementById(toggleId),\n      nav = document.getElementById(navId),\n      bodypd = document.getElementById(bodyId),\n      headerpd = document.getElementById(headerId)\n\n      // Validate that all variables exist\n      if(toggle && nav && bodypd && headerpd){\n      toggle.addEventListener('click', ()=>{\n      // show navbar\n      nav.classList.toggle('show')\n      // change icon\n      toggle.classList.toggle('bx-x')\n      // add padding to body\n      bodypd.classList.toggle('body-pd')\n      // add padding to header\n      headerpd.classList.toggle('body-pd')\n      })\n      }\n      }\n\n      showNavbar('header-toggle','nav-bar','body-pd','header')\n\n      /*===== LINK ACTIVE =====*/\n      const linkColor = document.querySelectorAll('.nav_link')\n\n      function colorLink(this: any){\n      if(linkColor){\n      linkColor.forEach(l=> l.classList.remove('active'))\n      this.classList.add('active')\n      }\n      }\n      linkColor.forEach(l=> l.addEventListener('click', colorLink))\n\n       // Your code to run since DOM is loaded and ready\n      });\n\n  }\n  login(){\n    this.router.navigate(['/login'])\n  }\n\n  onLogout(): void {\n    this.tokenService.logOut();\n    window.location.reload();\n}\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}